plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'application'
}

group = 'net.timbel'
version = '0.2'
description = 'Generate HWP document by templates.'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }

    withJavadocJar()
    withSourcesJar()
}

application {
    applicationName = 'hwp-template'
    mainClass = 'net.timbel.hwptemplate.Runner'
}

jar {
    archiveFileName = 'hwp-template.jar'

    manifest {
        attributes 'Main-Class': application.mainClass
    }

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath

    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

dependencies {
    implementation 'kr.dogfoot:hwplib:1.1.1'
    implementation 'com.google.code.gson:gson:2.10.1'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation platform('org.junit:junit-bom:5.9.2')
}

tasks.test {
    useJUnitPlatform()
}

publishing {
    publications {
        release(MavenPublication) {
            pom {
                name = project.name
                description = project.description
                url = 'https://github.com/timbel-net/hwp-template'
                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'https://github.com/timbel-net/hwp-template/tree/main/LICENSE.txt'
                    }
                }
                developers {
                    developer {
                        name = 'green'
                        email = 'green@timbel.net'
                    }
                }
                scm {
                    url = 'https://github.com/timbel-net/hwp-template/tree/main'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv('OSSRH_UID')
                password = System.getenv('OSSRH_PIN')
            }
        }
    }
}

ext['signing.keyId'] = '95B9EA88'
ext['signing.secretKeyRingFile'] = './signing-hwp-template.gpg'
ext['signing.password'] = System.getenv('OSSRH_UID')

signing {
    sign publishing.publications
}
